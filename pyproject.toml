[build-system]
requires = [ "setuptools>=72.2.0" ]
build-backend = "setuptools.build_meta"

[project]
name = "inyoka"
dynamic = ["version"]
description = "All-in-one portal software with Forum, Wiki, Planet, News and Calendar"
readme = "README.rst"
keywords = [ "calendar", "django", "forum", "news", "planet", "wiki" ]
license = { file = "LICENSE" }
authors = [
  { name = "Inyoka Team" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Message Boards",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: News/Diary",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Wiki",
]

dependencies = [
  "babel",
  "beautifulsoup4",
  "celery[redis]",
  "defusedxml",
  "django[argon2]<5",
  "django-filter",
  "django-guardian",
  "django-hosts",
  "django-redis",
  "feedparser",
  "gunicorn",
  "html5lib",
  "icalendar",
  "jinja2",
  "lxml[html-clean]",
  "pillow",
  "pip-tools",
  "psycopg2",
  "pygments",
  "python-dateutil",
  "python-magic",
  "requests",
  "sentry-sdk",
  "tzdata",
  "werkzeug",
]
optional-dependencies.dev = [
  "allure-behave",
  "bump-my-version",
  "coverage",
  "django-codemod",
  "django-debug-toolbar",
  "django-test-migrations",
  "django-upgrade",
  "freezegun",
  "responses",
  "myst-parser[linkify]", # markdown for sphinx
  "pyupgrade",
  "selenium",
  "sphinx",
  "sphinx-rtd-theme",
  "ruff",
]
urls.Changelog = "https://github.com/inyokaproject/inyoka/blob/master/ChangeLog.rst"
urls.Homepage = "https://inyokaproject.org/"
urls.Issues = "https://github.com/inyokaproject/inyoka/issues"
urls.Source = "https://github.com/inyokaproject/inyoka"

[tool.setuptools.dynamic]
version = { attr = "inyoka.INYOKA_VERSION" }

[tool.setuptools]
packages = [ "inyoka" ]


[tool.ruff]
exclude = [
    "build",
    ".*/",
    "./make_testdata.py",
]
line-length = 88

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
# default flake8 selection plus isort
select = ["F", "E", "W", "I"]
ignore = [
    "E402",
    "E501",
    "E731",
    "E203",
    "E741",
]

[tool.ruff.lint.per-file-ignores]
"apps.py" = ["F401"]
"**/migrations/*.py" = ["F401"]
"tests/**/settings/*.py" = ["F405", "F403"]
"tests/bdd/steps/*.py" = ["F811"]
"inyoka/locale/de_DE/formats.py" = ["F403"]


[tool.bumpversion]
current_version = "1.0.1"
parse = "(?P<major>\\d+)\\.(?P<django>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{django}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.bumpversion.parts.django]
independent = true
values = [
    "42",
    "52"
]

[[tool.bumpversion.files]]
filename = "inyoka/__init__.py"
search = 'INYOKA_VERSION = "{current_version}"'
replace = 'INYOKA_VERSION = "{new_version}"'

[[tool.bumpversion.files]]
filename = "package.json"
search = '"version": "{current_version}"'
replace = '"version": "{new_version}"'


[tool.coverage.run]
branch = true
source = [
  "inyoka/",
  ]
omit = [
  "inyoka/*/migrations/*",
  ]
