# Generated by Django 4.2.17 on 2025-01-08 22:58

import datetime

import django.db.models.functions.datetime
import django.utils.timezone
from django.db import migrations, models
from django.db.models import F

import inyoka.utils.database


def populate_publication_datetime(apps, schema_editor):
    article_model = apps.get_model("ikhaya", "Article")

    for a in article_model.objects.all():
        p_datetime = datetime.datetime.combine(a.pub_date, a.pub_time, datetime.timezone.utc)
        a.publication_datetime = p_datetime
        a.save()

def set_updated_to_none_where_it_equals_publication(apps, schema_editor):
    """
    Set `Article.updated` to the value None (python) / NULL (SQL) where `updated` has the
    same value as `publication_datetime`.
    """
    article_model = apps.get_model("ikhaya", "Article")

    article_model.objects.filter(updated=F('publication_datetime')).update(updated=None)


class Migration(migrations.Migration):

    dependencies = [
        ('ikhaya', '0010_auto_20230312_1704'),
    ]

    operations = [
        migrations.AlterField(
            model_name='suggestion',
            name='pub_date',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datum'),
        ),
        migrations.AlterUniqueTogether(
            name='article',
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name='article',
            name='updated',
            field=models.DateTimeField(blank=True, db_index=True, help_text='If you keep this field empty, the publication date will be used.', null=True, verbose_name='Last change'),
        ),
        migrations.AddField(
            model_name='article',
            name='publication_datetime',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publication time'),
        ),
        migrations.RunPython(
            code=populate_publication_datetime,
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ['-publication_datetime', 'author'], 'permissions': (('view_unpublished_article', 'Can view unpublished articles'), ('suggest_article', 'Can suggest articles')), 'verbose_name': 'Article', 'verbose_name_plural': 'Articles'},
        ),
        migrations.RemoveField(
            model_name='article',
            name='pub_date',
        ),
        migrations.RemoveField(
            model_name='article',
            name='pub_time',
        ),
        migrations.AlterField(
            model_name='suggestion',
            name='pub_date',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date'),
        ),
        migrations.RunPython(
            code=set_updated_to_none_where_it_equals_publication,
        ),
        migrations.AddConstraint(
            model_name='article',
            constraint=models.UniqueConstraint(inyoka.utils.database.TruncDateUtc('publication_datetime'), models.F('slug'), name='unique_pub_date_slug'),
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'permissions': (('view_unpublished_article', 'Can view unpublished articles'), ('suggest_article', 'Can suggest articles')), 'verbose_name': 'Article', 'verbose_name_plural': 'Articles'},
        ),
    ]
